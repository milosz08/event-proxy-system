name: Build and create system dependent client binaries with new tag and release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Enter the version in format X.X.X"
        required: true
        default: "1.0.0"
        type: string

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js with Yarn cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
          cache-dependency-path: ./event-desktop-client/yarn.lock

      - name: Set ${{ github.event.inputs.version }} version in package.json file
        uses: restackio/update-json-file-action@2.1
        with:
          file: ./event-desktop-client/package.json
          fields: "{\"version\": \"${{ github.event.inputs.version }}\"}"

      - name: Install dependencies
        working-directory: ./event-desktop-client
        run: yarn install --frozen-lockfile

      - name: Build and create binaries
        working-directory: ./event-desktop-client
        run: yarn run build:linux

      - name: Upload generated linux binaries
        uses: actions/upload-artifact@v4
        with:
          name: linux-binaries
          path: ./event-desktop-client/dist/event-desktop-client-*.AppImage
          retention-days: 1

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js with Yarn cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
          cache-dependency-path: ./event-desktop-client/yarn.lock

      - name: Set ${{ github.event.inputs.version }} version in package.json file
        uses: restackio/update-json-file-action@2.1
        with:
          file: ./event-desktop-client/package.json
          fields: "{\"version\": \"${{ github.event.inputs.version }}\"}"

      - name: Install dependencies
        working-directory: ./event-desktop-client
        run: yarn install --frozen-lockfile

      - name: Build and create binaries
        working-directory: ./event-desktop-client
        run: yarn run build:win

      - name: Upload generated windows binaries
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: ./event-desktop-client/dist/event-desktop-client-*.exe
          retention-days: 1

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js with Yarn cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
          cache-dependency-path: ./event-desktop-client/yarn.lock

      - name: Set ${{ github.event.inputs.version }} version in package.json file
        uses: restackio/update-json-file-action@2.1
        with:
          file: ./event-desktop-client/package.json
          fields: "{\"version\": \"${{ github.event.inputs.version }}\"}"

      - name: Install dependencies
        working-directory: ./event-desktop-client
        run: yarn install --frozen-lockfile

      - name: Build and create binaries
        working-directory: ./event-desktop-client
        run: yarn run build:mac

      - name: Upload generated macos binaries
        uses: actions/upload-artifact@v4
        with:
          name: macos-binaries
          path: ./event-desktop-client/dist/event-desktop-client-*.dmg
          retention-days: 1

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-windows
      - build-macos

    permissions:
      contents: write

    steps:
      - name: Download generated linux binaries
        uses: actions/download-artifact@v4
        with:
          name: linux-binaries
          path: ${{ github.workspace }}/linux-binaries

      - name: Download generated windows binaries
        uses: actions/download-artifact@v4
        with:
          name: windows-binaries
          path: ${{ github.workspace }}/windows-binaries

      - name: Download generated macos binaries
        uses: actions/download-artifact@v4
        with:
          name: macos-binaries
          path: ${{ github.workspace }}/macos-binaries

      - name: Organize release files
        run: |
          mkdir ./release
          mv ./linux-binaries/* ./release/
          mv ./windows-binaries/* ./release/
          mv ./macos-binaries/* ./release/

      - name: Create signed GPG tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: v${{ github.event.inputs.version }}
          message: "Release v${{ github.event.inputs.version }}"
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_KEY_PASSPHRASE }}

      - name: Create GitHub Release (Draft)
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          generate_release_notes: true
          files: ./release/*
          token: ${{ secrets.GITHUB_TOKEN }}
